# Copyright (c) 2024 Vipas.AI
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of a proprietary license which prohibits
# redistribution and use in any form, without the express prior written consent
# of Vipas.AI.
#
# This code is proprietary to Vipas.AI and is protected by copyright and
# other intellectual property laws. You may not modify, reproduce, perform,
# display, create derivative works from, repurpose, or distribute this code or any portion of it
# without the express prior written permission of Vipas.AI.
#
# For more information, contact Vipas.AI at legal@vipas.ai

# Increase the limit of file descriptors for the worker process
worker_rlimit_nofile 4096;

# Configure event handling
events {
    worker_connections 4096; # Maximum number of simultaneous connections per worker process
}

http {
    # Define a custom log format for detailed logging
    log_format main_custom 'VPS-ModelGateway: $remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" ';

    # Configure access and error logging
    access_log /var/log/nginx/access.log main_custom;
    error_log /var/log/nginx/error.log;

    # Define upstream server for backend application
    upstream vps_model_gateway_service {
        server 127.0.0.1:8000; # Backend server address and port
    }

    # Define server block for handling HTTPS requests
    server {
        listen 80; # Listen for HTTP connections on port 80
        server_name _;  # Listen to all domain in the cluster

        # CORS configuration
        # Check if the origin matches the required pattern
        # Handle /predict requests and forward them to the upstream model_service
        location = /predict {
            # Setting the request max body to 10M
            client_max_body_size 10M;

            proxy_pass http://vps_model_gateway_service; # Proxy pass to backend including /predict
            proxy_set_header Host $host; # Pass the original Host header to the backend
            proxy_set_header X-Real-IP $remote_addr; # Pass the real client IP to the backend
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # For logging purposes
            proxy_set_header X-Forwarded-Proto $scheme; # Pass the schema (http/https)


            # Set timeouts
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
    }
}
